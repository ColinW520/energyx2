= simple_form_for [@event], authenticity_token: true, html: { id: 'EventForm', multipart: true } do |f|
  - if @event.errors.any?
    .row
      .col-sm-12
        #error_explanation
          %h2.text-danger
            = pluralize(@registration.errors.count, "error")
            prohibited this Event from being saved:
          %ul
            - @event.errors.full_messages.each do |message|
              %li= message
  .row.jumbotron
    .col-sm-12.col-md-2
      %legend Basics
    .col-sm-12.col-md-10
      .row
        .col-sm-12.col-md-6.form-group
          = f.input :name, autofocus: true, required: true
        .col-sm-12.col-md-6.form-group
          = f.input :starts_at, as: :datetime, required: true
      .row
        .col-sm-12.form-group
          = f.input :description, as: :text, required: true
      .row
        .col-sm-12.form-group
          %p.text-bold Select an Image to Promote this Event
          = f.input :promo_image, label: false, as: :file
      .row
        .col-sm-12.col-md-6.form-group
          = f.input :address, label: 'Where is it?'
        .col-sm-12.col-md-6.form-group
          = f.input :button_text, label: 'What do you want the button to say?', input_html: {value: f.object.button_text || 'SIGN UP'}
  %hr
  .row.jumbotron
    .col-sm-12.col-md-2
      %legend Outside Registration
    .col-sm-12.col-md-10
      .row
        .col-sm-12.col-md-12.form-group
          = f.input :link, as: :url, label: '<i>Outside Registration Link</i>'.html_safe, hint: 'Use this if registration takes place on some other site.'
          .text-danger WARNING: NO OTHER REGISTRATION SETTINGS MATTER IF YOU POPULATE THIS FIELD!
  %hr
  .row.jumbotron
    .col-sm-12.col-md-2
      %legend Internal Registration Settings
      %p.text-danger No other Registration settings will matter if registration isn't required for this event.
    .col-sm-12.col-md-10
      .row
        .col-sm-12.form-group
          %br
          = f.input :registerable, as: :boolean, label: 'Require Registration?'
      .row
        .col-sm-12.form-group
          = f.input :registration_ends_at, as: :datetime
      .row
        .col-sm-12.form-group
          = f.input :registration_instructions, hint: 'This is a good place to specify any additional steps beyond just filling out the fields.'
      .row
        .col-sm-12.form-group
          = f.input :cap_size, as: :integer, hint: "The maximum number of registrations allowed. Will be overridden if there are waves.", required: true,  input_html: { value: @event.cap_size || 50 }
      .row
        .col-sm-12.form-group
          = f.input :is_offering_shirt, as: :boolean, label: "Enable Shirt Size Selection?", hint: 'Uncheck this box if no TShirts for this'
  %hr
  .row.jumbotron
    .col-sm-12.col-md-2
      %legend Registration Payment Settings
      %p If we are requiring registration, these settings define whether or not to collect payments, and how much.
    .col-sm-12.col-md-10
      .row
        .col-sm-12.col-md-6.form-group
          = f.input :is_free, as: :boolean, label: 'Do not collect payments.', hint: 'Check this box to <i>DISABLE</i> payment collection.'.html_safe
        .col-sm-12.col-md-6.form-group
          = f.input :price_in_cents, required: true, hint: "$1 = 100Â¢. Will be shown in $", default: @event.persisted? ? @event.price_in_cents : 1000
  %hr
  .row.jumbotron
    .col-sm-12.col-md-2
      %legend Waves
      %p
        Waves give events the ability organize participants into smaller,
        more manageable groups. Waves can have start times independent of the
        event itself. If waves are specified, their individual caps will override
        the event's caps size.
      = link_to_add_association '+ add', f, :event_stages, "data-association-insertion-node" => "tbody#waves", :"data-association-insertion-method" => "append", class: 'btn btn-sm btn-success text-info'
    .col-sm-12.col-md-10
      .row
        .col-sm-12
          %table.table.table-bordered
            %thead
              %th Name
              %th Cap Size
              %th Starting Time
              %th
            %tbody#waves
              = f.fields_for :event_stages do |wave|
                = render 'event_stage_fields', f: wave\
  -# %hr
  -# .row.jumbotron
  -#   .col-sm-12.col-md-2
  -#     %legend Teams
  -#     %p
  -#       Teams give participants the ability to compete together as a group, and
  -#       organizers the ability to group participants by association.
  -#     = link_to_add_association '+ add', f, :event_teams, "data-association-insertion-node" => "tbody#teams", :"data-association-insertion-method" => "append", class: 'btn btn-sm btn-success text-info'
  -#   .col-sm-12.col-md-10
  -#     .row
  -#       .col-sm-12
  -#         %table.table.table-bordered
  -#           %thead
  -#             %th Name
  -#             %th Allowed Emails
  -#             %th
  -#           %tbody#teams
  -#             = f.fields_for :event_teams do |team|
  -#               = render 'event_team_fields', f: team
  -# %hr
  -# .row.jumbotron
  -#   .col-sm-12.col-md-2
  -#     %legend Discount Codes
  -#     %p
  -#       Discount Codes give organizers the ability to offer discounts for registration.
  -#       If the user enters the discount code, their registration fee will be discounted by the amount specified
  -#     = link_to_add_association '+ add', f, :event_discount_codes, "data-association-insertion-node" => "tbody#codes", :"data-association-insertion-method" => "append", class: 'btn btn-sm btn-success text-info'
  -#   .col-sm-12.col-md-10
  -#     .row
  -#       .col-sm-12
  -#         %table.table.table-bordered
  -#           %thead
  -#             %th Word
  -#             %th % Off
  -#             %th Available?
  -#             %th Limit
  -#             %th Used
  -#             %th
  -#           %tbody#codes
  -#             = f.fields_for :event_discount_codes do |code|
  -#               = render 'event_discount_code_fields', f: code
  %hr
  .form-actions
    .text-center
      %p Whew, you're done!
      = f.button :submit, class: 'btn btn-md btn-success text-primary'
